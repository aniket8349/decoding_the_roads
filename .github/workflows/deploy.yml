name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run API Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: "Create .env file"
        run: |
          echo "MYSQL_ADDON_HOST=${{ secrets.MYSQL_ADDON_HOST }}" >> .env
          echo "MYSQL_ADDON_DB=${{ secrets.MYSQL_ADDON_DB }}" >> .env
          echo "MYSQL_ADDON_USER=${{ secrets.MYSQL_ADDON_USER }}" >> .env
          echo "MYSQL_ADDON_PORT=${{ secrets.MYSQL_ADDON_PORT }}" >> .env
          echo "MYSQL_ADDON_PASSWORD=${{ secrets.MYSQL_ADDON_PASSWORD }}" >> .env
          echo "MYSQL_ADDON_URI=${{ secrets.MYSQL_ADDON_URI }}" >> .env
  
      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          
      - name: Install Test Dependencies
        run: |
          pip install -r dev-requirements.txt

      - name: Run Tests
        run: pytest

  deploy:
    name: Deploy to Google Cloud Run
    needs: test  # Ensures tests pass before deploying
    if: github.ref == 'refs/heads/main'  # Runs only on main branch
    runs-on: ubuntu-latest
    env:
      YOUR_GCP_PROJECT_ID: decoding-the-roads
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.YOUR_GCP_PROJECT_ID }}
          
      - name: Authenticate with Google Cloud
        run: gcloud auth configure-docker
      
      - name: Build and Push Docker Image
        run: |
          docker build -t gcr.io/${{ env.YOUR_GCP_PROJECT_ID }}/decoding-the-roads:${{ github.sha }} .
          docker push gcr.io/${{ env.YOUR_GCP_PROJECT_ID }}/decoding-the-roads:${{ github.sha }}
      
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy decoding-the-roads \
            --image gcr.io/${{ env.YOUR_GCP_PROJECT_ID }}/decoding-the-roads:${{ github.sha }} \
            --platform managed \
            --region asia-south1 \
            --allow-unauthenticated \
            --set-env-vars MYSQL_ADDON_HOST=${{ secrets.MYSQL_ADDON_HOST }} \
            --set-env-vars MYSQL_ADDON_DB=${{ secrets.MYSQL_ADDON_DB }} \
            --set-env-vars MYSQL_ADDON_USER=${{ secrets.MYSQL_ADDON_USER }} \
            --set-env-vars MYSQL_ADDON_PASSWORD=${{ secrets.MYSQL_ADDON_PASSWORD }} \
            --set-env-vars MYSQL_ADDON_PORT=${{ secrets.MYSQL_ADDON_PORT }} \
            --set-env-vars MYSQL_ADDON_URI=${{ secrets.MYSQL_ADDON_URI }}
      
      - name: Remove Old Images
        run: |
          # Fetch all image digests except the most recent one
          gcloud container images list-tags gcr.io/decoding-the-roads/decoding-the-roads \
          --format="value(digest)" --sort-by="~timestamp" --limit=100 | tail -n +2 \
          | awk '{print "sha256:" $1}' \
          | xargs -I {} gcloud container images delete gcr.io/decoding-the-roads/decoding-the-roads@{} --quiet
        